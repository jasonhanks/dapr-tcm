# Use root/example as user/password credentials
version: '3.1'

services:

  # MongoDB is the NoSQL data store needed for the app
  mongo:
    image: mongo
    restart: unless-stopped
    # environment:
      # Provide the database to use in MongoDB
      # MONGO_INITDB_DATABASE: trac-tcm
    ports:
      - 27017:27017     # MongoDB port


  # Mongo Express is a UI to view MongoDB data for debugging purposes
  # mongo-express:
  #   image: mongo-express
  #   restart: unless-stopped
  #   depends_on: 
  #     - mongo           # wait for MongoDB server to start
  #   ports:
  #   - 8081:8081         # Mongo Express UI port
  #   environment:
  #     # Mongo Express connection information (our own MongoDB server)
  #     ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/


  # This container provides the TRAC-API service needed by the user interface
  trac-api:
    build: ./backend            # Build image from local Dockerfile
    image: ghcr.io/jasonhanks/trac-tcm/trac-api:latest    # public image name if not building
    restart: unless-stopped
    depends_on: 
      - mongo   # wait on mongo-express server to startup
    environment:
      # This is required to connect to the desired MongoDB instance
      DATABASE_URL: mongodb://mongo:27017/
      # This is required for the Node.JS proxy to work properly
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
    ports:
      - 3001:3001       # API server port (only used for debugging the API)


  # This container provides the TRAC-TCM user interface that connects to the TRAC-API service
  trac-tcm:
    build: ./frontend
    image: ghcr.io/jasonhanks/trac-tcm/trac-tcm:latest
    restart: unless-stopped
    ports:
    - "3000:80"
    environment:
    - NGINX_HOST=localhost
    - NGINX_PORT=80

    # Reference the backend API we're mapping /api to the service name for TRAC-API
    - API_URL=http://trac-api:3001
